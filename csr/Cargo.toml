[package]
name = "fuel_dao_leptos_csr"
version = "0.1.0"
edition = "2021"

[dependencies]
# axum = { version = "0.7", optional = true, features = ["macros"] }
console_error_panic_hook = "0.1"
leptos = { version = "0.6.15", default-features = false, features = ["csr"] }

# leptos_axum = { version = "0.6" }
leptos_meta = { version = "0.6", features = ["nightly"] }
leptos_router = { version = "0.6", features = ["nightly"] }
# tokio = { version = "1", optional = true, features = [
#     "rt-multi-thread",
#     "signal",
#     "time",
# ] }
# tower = { version = "0.4", optional = true, features = ["full"] }
# tower-http = { version = "0.5", features = ["fs"], optional = true }
wasm-bindgen = "=0.2.93"
thiserror = "1"
tracing = { version = "0.1", optional = true }
http = "1"
leptos_icons = "0.3.1"
icondata_core = "0.1.0"
icondata = "0.4.0"
#speedate = "0.14.4"
serde.workspace = true
candid.workspace = true
ic-agent = { version = "0.38.1", features = ["wasm-bindgen"]}
ic-base-types = { git = "https://github.com/dfinity/ic", rev = "tags/release-2024-05-29_23-02-base" }
icp-ledger = { git = "https://github.com/dfinity/ic", rev = "tags/release-2024-05-29_23-02-base" }
serde-wasm-bindgen = "0.6.5"
futures = "0.3.30"
leptos-use = "0.12.0"
codee = { version = "0.1.2", features = ["json_serde"] }
#reqwest = { version = "0.12", default-features = false, features = [
#    "json",
#    "http2",
#] }
k256 = { version = "0.13.4", default-features = false, features = [
    "std",
    "jwk",
] }
web-time.workspace = true
uts2ts = "0.4.1"
dotenv = { version = "0.15.0", optional = true }
# axum-extra = { version = "0.9.3", optional = true, features = [
#     "cookie",
#     "cookie-signed",
#     "cookie-private",
# ] }
rand_chacha = { version = "0.3.1"}
serde_json = "1.0.110"
enum_dispatch = { version = "0.3.12", optional = true }
# redis = { version = "0.25.2", features = [
    # "tokio-rustls-comp",
    # "aio",
    # "ahash",
    # "connection-manager",
    # "keep-alive",
# ], default-features = false, optional = true }
# redb = { version = "2.0.0"}
gloo = { version = "0.11.0", features = ["futures", "net", "net"] }
# bb8 = { version = "0.8.3" }
# bb8-redis = { version = "0.15.0", optional = true }
log = "0.4.22"
simple_logger = "5.0.0"
hex = "0.4.3"
convert_case = "0.6.0"
chrono = "0.4.38"
console_log = "1"

[build-dependencies]
anyhow = "1.0.86"
candid_parser = "0.1.1"
convert_case = "0.6.0"
serde = { version = "1.0.210", features = ["derive"] }
serde_json = "1.0.128"

[lib]
crate-type = ["cdylib"]

[package.metadata.leptos]
# The name used by wasm-bindgen/cargo-leptos for the JS/WASM bundle. Defaults to the crate name
output-name = "fuel-dao-leptos-ssr"

# The site root folder is where cargo-leptos generate all output. WARNING: all content of this folder will be erased on a rebuild. Use it in your server setup.
site-root = "target/site"

# The site-root relative folder where all compiled output (JS, WASM and CSS) is written
# Defaults to pkg
site-pkg-dir = "pkg"

# [Optional] The source CSS file. If it ends with .sass or .scss then it will be compiled by dart-sass into CSS. The CSS is optimized by Lightning CSS before being written to <site-root>/<site-pkg>/app.css
tailwind-input-file = "style/tailwind.css"
tailwind-config-file = "tailwind.config.js"
# Assets source dir. All files found here will be copied and synchronized to site-root.
# The assets-dir cannot have a sub directory with the same name/path as site-pkg-dir.
#
# Optional. Env: LEPTOS_ASSETS_DIR.
assets-dir = "public"

# The IP and port (ex: 127.0.0.1:3000) where the server serves the content. Use it in your server setup.
site-addr = "127.0.0.1:3000"

# The port to use for automatic reload monitoring
reload-port = 3001

# [Optional] Command to use when running end2end tests. It will run in the end2end dir.
#   [Windows] for non-WSL use "npx.cmd playwright test"
#   This binary name can be checked in Powershell with Get-Command npx
end2end-cmd = "npx playwright test"
end2end-dir = "end2end"

#  The browserlist query used for optimizing the CSS.
browserquery = "defaults"

# The environment Leptos will run in, usually either "DEV" or "PROD"
env = "DEV"

# The features to use when compiling the bin target
#
# Optional. Can be over-ridden with the command line parameter --bin-features
bin-features = ["csr"]

# If the --no-default-features flag should be used when compiling the bin target
#
# Optional. Defaults to false.
bin-default-features = false

# The features to use when compiling the lib target
#

# If the --no-default-features flag should be used when compiling the lib target
#
# Optional. Defaults to false.
lib-default-features = false

# The profile to use for the lib target when compiling for release
#
# Optional. Defaults to "release".
lib-profile-release = "wasm-release"


