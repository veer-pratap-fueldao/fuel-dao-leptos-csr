type Car = record {
  id : nat64;
  bookings : vec RentalTransaction;
  details : CarDetails;
};
type CarAvailability = record {
  available : opt RentalTransaction;
  details : CarDetails;
};
type CarDetails = record {
  id : nat64;
  status : CarStatus;
  model : text;
  mileage : opt nat32;
  make : text;
  color : opt text;
  year : nat32;
  description : text;
  current_price_per_day : float64;
  default_image_url : text;
  car_type : CarType;
  pickup_location : opt Location;
  dropoff_location : opt Location;
  capacity : nat8;
  fuel_type : FuelType;
  price_per_day : float64;
  transmission_type : TransmissionType;
};
type CarStatus = variant {
  OutOfService : record { reason : text };
  Available;
  Reserved : record {
    reservation_id : principal;
    reservation_timestamp : nat64;
    customer_id : principal;
  };
  UnderMaintenance;
  ComingSoon;
  ScheduledForInspection : record { inspection_timestamp : nat64 };
  Unavailable;
};
type CarType = variant { SUV; Sedan; Truck; Coupe };
type CustomerDetials = record {
  age : nat8;
  pan : text;
  mobile_number : text;
  name : text;
  email : text;
  country_code : text;
  aadhar : text;
};
type EventMoniter = variant {
  CarCheckout : record {
    user_principal : principal;
    car_id : nat64;
    current_timestamp : nat64;
  };
  SelectedCar : record {
    user_principal : principal;
    car_id : nat64;
    current_timestamp : nat64;
  };
  SearchInitiate : record {
    user_principal : principal;
    current_timestamp : nat64;
  };
};
type FuelType = variant { Petrol; Electric; Hybrid; Diesel };
type Location = record {
  latitude : float64;
  longitude : float64;
  address : text;
};
type PaymentStatus = variant { Paid; Unpaid };
type RentalTransaction = record {
  end_timestamp : nat64;
  total_amount : float64;
  customer : opt CustomerDetials;
  start_timestamp : nat64;
  customer_principal_id : principal;
  payment_status : PaymentStatus;
  car_principal_id : nat64;
};
type Result = variant { Ok : text; Err : text };
type Result_1 = variant { Ok : RentalTransaction; Err : text };
type TransmissionType = variant { Manual; Automatic };
service : () -> {
  add_car : (CarDetails) -> ();
  cancel_reservation : (nat64) -> (Result);
  get_car_details : (nat64, nat64, nat64) -> (opt CarAvailability);
  get_default_car : () -> (opt Car) query;
  get_monitoring_events : () -> (vec EventMoniter) query;
  greet : (text) -> (text) query;
  list_all_cars : () -> (vec Car);
  reserve_car : (nat64, nat64, nat64, CustomerDetials) -> (Result_1);
  search_car : (nat64, nat64) -> (vec Car) query;
  update_car : (nat64, CarDetails) -> ();
}
